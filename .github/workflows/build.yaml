name: Build

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-18.04
        - macos-10.15
        - windows-2019
        python-version:
        - 3.7
        - 3.8

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Configure env for non-Linux builds
      run: |
        echo "::set-env name=QRY_CI_NODOCKER::1"
      if: matrix.os != 'ubuntu-18.04'
    - name: Configure macOS runner
      run: |
        echo "::set-env name=LDFLAGS::'-L/usr/local/opt/openssl/lib'"
        echo "::set-env name=CPPFLAGS::'-I/usr/local/opt/openssl/include'"
      if: matrix.os == 'macos-10.15'
    - name: Set up Docker env
      run: |
        docker-compose up -d
      if: env.QRY_CI_NODOCKER != '1'
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    - name: Typecheck with mypy
      run: |
        mypy .
    - name: Test with pytest
      run: |
        pytest --cov=qry --cov-report=xml
    - name: Upload code coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: false # temp fix for timeouts
    - name: Build with pyinstaller
      run: |
        pyinstaller --noconfirm cli.spec
    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.os }}-py${{ matrix.python-version }}-qry
        path: dist/
